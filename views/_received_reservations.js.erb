require(['jquery','charts','ysdtemplate'], function($, Chart, tmpl) {


  reservationsForecastModel = {

     result : null,

     graphData : { labels   : [] ,
                   datasets : [
                     {
                     label: 'Solicitudes',
                 	   backgroundColor : "rgba(220, 220, 220, 0.5)",
			               borderColor : "rgba(220, 220, 220, 1)",
			               data : []
			               },
                     {
                     label: 'Confirmadas',
                     backgroundColor : "rgba(151,187,205,0.5)",
			               borderColor : "rgba(151,187,205,1)",
			               data : []
		             }			         
                   ] 
               },

     maxValue: function() {
        var max= 10;
        for (var property in this.result) {
          var confirmed = new Number(this.result[property].confirmed);
          var requests = new Number(this.result[property].requests);
          if (confirmed > max) {
            max = confirmed;
          }
          if (requests > max) {
            max = requests;
          }
        }
        return max;
     },

     loadData: function(year) {

       var url = '/api/booking/analysis/received-reservations';
       if (year) {
         url += '?year='+year;
       }

  	   $.ajax({
  	   	       type: 'GET',
  	   	       url : url,
  	   	       contentType: 'application/json; charset=utf-8',
  		       dataType : 'json',
  		       success: function(data, textStatus, jqXHR) {
                  reservationsForecastModel.result = data;
                  reservationsForecastModel.graphData.labels = [];
                  reservationsForecastModel.graphData.datasets[0].data = [];   
                  reservationsForecastModel.graphData.datasets[1].data = [];               
                  for (item in data) {
                    reservationsForecastModel.graphData.labels.push(item);
                    reservationsForecastModel.graphData.datasets[0].data.push(data[item].requests);
                    reservationsForecastModel.graphData.datasets[1].data.push(data[item].confirmed);                  	
                  }

                  reservationsForecastView.update('data_available');
              }
          });

     }

  };

  reservationsForecastController = {

  };

  reservationsForecastView = {

     ctx : null,
     chart: null,

     init : function() {
     	this.ctx = document.getElementById("booking_graphic").getContext("2d");
     },

     update: function(status) {

        switch(status) {
            case 'data_available':
            if (this.chart) {
              $('#booking_graphic').replaceWith('<canvas id="booking_graphic" width="640" height="550"></canvas>');
        	    this.ctx = document.getElementById("booking_graphic").getContext("2d");
            }
            this.chart = new Chart(this.ctx, {
                type: 'bar',
                data: reservationsForecastModel.graphData,
                options: {
                    scaleOverride: true,
                    scaleStartValue: 0,
                    scaleStepWidth: Math.ceil(reservationsForecastModel.maxValue() / 20),
                    scaleSteps: 20,
                    scaleIntegersOnly: true
                }
            });

        	  $("#booking_data").html(tmpl('booking_data_table', {data: reservationsForecastModel.result}));
        	  break;
        }

       
     }

  };

  reservationsForecastView.init();
  reservationsForecastModel.loadData(<%=current_year%>);

});