<%= partial('received_reservations.js'.to_sym, :locals => {current_year: current_year}) %>

require(['jquery', 'YSDMemoryDataSource','YSDSelectSelector', 'YSDForms', 'charts', 'jquery.flot', 'jquery.flot.time', 'jquery.ui', 'datejs'],
        function($, MemoryDataSource, SelectSelector, YSDForms, Chart) {

    model = {

        cummulativeReservation: [
         { label: '2018', data: [<% d=0; @cummulative_reservation_data.each do |k,v| %>[new Date('2018-<%=k%>').getTime(),<%=v%>],<%d=d+1%><%end%>], shadowSize: 0},
         { label: '2017', data: [<% d=0; @cummulative_reservation_data_previous.each do |k,v| %>[new Date('2018-<%=k%>').getTime(),<%=v%>],<%d=d+1%><%end%>], shadowSize: 0},
         {label: '2016', data:  [<% d=0; @cummulative_reservation_data_before_previous.each do |k,v| %>[new Date('2018-<%=k%>').getTime(),<%=v%>],<%d=d+1%><%end%>], shadowSize: 0}
        ],

        loadData: function(year) {
            reservationsForecastModel.loadData(year);
        }
    };

    controller = {

        yearChanged: function(year) {
            model.loadData(year);
        }

    };

    view = {
        init: function () {

            this.buildCummulativePlot();

            // Configure weights
            var years = [];
            for (var idx=<%=first_year%>;idx<=<%=current_year%>;idx++) {
                years.push(idx);
            }
            var yearsDataSource = new MemoryDataSource(years);
            var yearValue = <%=current_year%>;
            var selectWeight = new SelectSelector('year', yearsDataSource, yearValue);
            $('#year').bind('change', function() {
                controller.yearChanged($(this).val());
            });

        },

        buildCummulativePlot: function() {
            var options = {
                series: {
                    lines: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    tickSize: [1, "month"],
                    tickLength: 0,
                    axisLabelUseCanvas: true
                },
                yaxis:{
                    axisLabelUseCanvas: true,
                    axisLabelPadding: 3
                },
                legend: {
                    noColumns: 0,
                    labelBoxBorderColor: "#000000",
                    position: "nw"
                },
                grid: {
                    hoverable: true,
                    borderWidth: 1,
                    borderColor: "#dddddd",
                    backgroundColor: "#ffffff"
                },
                colors: ["#336b44", "#60ae5c", "#EEEEEE"] // Lines colors
            };

            $.plot("#cummulative_received_reservations_graphic",  model.cummulativeReservation, options);
        }
    }

    view.init();
});